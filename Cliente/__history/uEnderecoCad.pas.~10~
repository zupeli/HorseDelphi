unit uEnderecoCad;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Mask, Vcl.StdCtrls,
  Vcl.Samples.Gauges, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TfrmEnderecoCad = class(TForm)
    GroupBox1: TGroupBox;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Gauge1: TGauge;
    edCEP: TMaskEdit;
    edUF: TEdit;
    edCidade: TEdit;
    edBairro: TEdit;
    edLogradouro: TEdit;
    edComplemento: TEdit;
    btSalvar: TButton;
    btSair: TButton;
    tabEndereco: TFDMemTable;
    tabEnderecoidpessoa: TIntegerField;
    tabEnderecoidendereco: TIntegerField;
    tabEnderecodscep: TStringField;
    tabEnderecodsuf: TStringField;
    tabEndereconmcidade: TStringField;
    tabEndereconmbairro: TStringField;
    tabEndereconmlogradouro: TStringField;
    tabEnderecodscomplemento: TStringField;
    procedure btSalvarClick(Sender: TObject);
    procedure btSairClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
  private
    FidEndereco: Integer;
    FidPessoa: Integer;
    function SomenteNumero(str: string): string;
    procedure SetDados;
    procedure TerminateSalvar(Sender: TObject);
    { Private declarations }
  public
    { Public declarations }
    property idEndereco : Integer  read FidEndereco   write FidEndereco;
    property idPessoa   : Integer  read FidPessoa     write FidPessoa;
  end;

var
  frmEnderecoCad: TfrmEnderecoCad;

implementation

uses uThread, DataM;

{$R *.dfm}

procedure TfrmEnderecoCad.btSairClick(Sender: TObject);
begin
  Close;
end;

procedure TfrmEnderecoCad.btSalvarClick(Sender: TObject);
begin
  if SomenteNumero(edCEP.Text).Length <> 8 then
  begin
    ShowMessage('CEP inválido');
    exit;
  end;

  TMyThread.ExecuteThread(procedure
  begin
    if FidPessoa = 0 then
    begin
      SetDados;
      DM.InserirEndereco(tabEndereco);
    end
    else
    begin
//      DM_Pessoa.Editar(TNavigation.ParamInt, TNavigation.ParamIntEnd, edDocumento.Text,
//                       edNome.Text, edSobrenome.Text, edCEP.Text, edUF.Text, edCidade.Text,
//                       edBairro.Text, edLogradouro.Text, edComplemento.Text);
    end;

  end, TerminateSalvar);
end;

procedure TfrmEnderecoCad.TerminateSalvar(Sender: TObject);
begin

  if Sender is TThread then
    if Assigned(TThread(sender).FatalException) then
    begin
      showmessage(Exception(TThread(sender).FatalException).Message);
      exit;
    end;

end;

procedure TfrmEnderecoCad.SetDados;
begin
  tabEndereco.EmptyDataSet;
  tabEndereco.Insert;
  tabEnderecoidpessoa.AsInteger     := 0;
  tabEnderecoidendereco.AsInteger   := 0;
  tabEnderecodscep.AsString         := Trim(edCEP.Text);
  tabEnderecodsuf.AsString          := Trim(edUF.Text);
  tabEndereconmcidade.AsString      := Trim(edCidade.Text);
  tabEndereconmbairro.AsString      := Trim(edBairro.Text);
  tabEndereconmlogradouro.AsString  := Trim(edLogradouro.Text);
  tabEnderecodscomplemento.AsString := Trim(edComplemento.Text);
  tabEndereco.Post;
end;

procedure TfrmEnderecoCad.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Action := TCloseAction.caFree;
  frmEnderecoCad := nil;
end;

procedure TfrmEnderecoCad.FormCreate(Sender: TObject);
begin
  tabEndereco.CreateDataSet;
end;

function TfrmEnderecoCad.SomenteNumero(str : string) : string;
var
    x : integer;
begin
    Result := '';
    for x := 0 to Length(str) - 1 do
        if (str.Chars[x] In ['0'..'9']) then
            Result := Result + str.Chars[x];

  Result := Trim(StringReplace(Result, '-', '', [rfReplaceAll, rfIgnoreCase]));
end;



end.
